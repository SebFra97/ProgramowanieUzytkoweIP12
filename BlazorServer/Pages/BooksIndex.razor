@using Models.DTO;
@using CQRSMediatR.Books.Query
@using System

@page "/books"

<h1>List of Books</h1>
<div class="mb-2 w-100">
    <table class="table w-100">
        <thead>
            <tr>
                <th>Tytuł</th>
                <th>Data wydania</th>
                <th>Średnia ocen</th>
                <th>Ilość ocen</th>
                <th>Autorzy</th>
                <th>Akcje</th>
            </tr>
        </thead>
        @if(listOfBooks.Count > 0)
        {
            <tbody>
                @foreach (var book in listOfBooks)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.ReleaseDate</td>
                        <td>@book.AverageRate</td>
                        <td>@book.RatesCount</td>
                        <td>
                            @string.Join(", ", book.Authors.Select(x => x.FirstName + " " + x.SecondName).ToArray());
                        </td>
                        <td>Akcja 1</td>
                    </tr>
                }
            </tbody>
        }
    </table>
</div>


@code {
    private List<BookDto> listOfBooks;
    private PaginationDto paginationDto = new PaginationDto (0,10);


    protected override async Task OnInitializedAsync()
    {
        listOfBooks = new List<BookDto>();
        listOfBooks = await _mediator.Send(new GetAllBooksQuery() { page = 0, count = 10 });
        StateHasChanged();

    }
}
